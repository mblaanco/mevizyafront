{"ast":null,"code":"var _jsxFileName = \"/home/murilo/Documentos/Mevizya/frontend/src/pages/Dashboard/index.js\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport api from \"../../services/api\";\nimport { Container, List } from './styles';\nconst range = [8, 9, 10, 11, 12, 13, 14, 15];\nexport default function Dashbord() {\n  const [files, setFiles] = useState([]);\n  useEffect(() => {\n    async function loadFiles() {\n      const response = await api.get('files');\n      console.tron.log(response.data);\n      setFiles(response.data);\n    }\n\n    loadFiles();\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Carregar Listas\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, files.map(file => /*#__PURE__*/React.createElement(List, {\n    key: file.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, file.name), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, file.content[105])))));\n}","map":{"version":3,"sources":["/home/murilo/Documentos/Mevizya/frontend/src/pages/Dashboard/index.js"],"names":["React","useState","useMemo","useEffect","api","Container","List","range","Dashbord","files","setFiles","loadFiles","response","get","console","tron","log","data","map","file","id","name","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,UAAhC;AAEA,MAAMC,KAAK,GAAG,CACZ,CADY,EACV,CADU,EACR,EADQ,EACL,EADK,EACF,EADE,EACC,EADD,EACI,EADJ,EACO,EADP,CAAd;AAIA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,SAAf,GAA2B;AACzB,YAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAJ,CAAQ,OAAR,CAAvB;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBJ,QAAQ,CAACK,IAA1B;AACAP,MAAAA,QAAQ,CAACE,QAAQ,CAACK,IAAV,CAAR;AACD;;AAEDN,IAAAA,SAAS;AACV,GARQ,EAQN,EARM,CAAT;AASA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACS,GAAN,CAAUC,IAAI,iBACb,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASD,IAAI,CAACE,IAAd,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,IAAI,CAACG,OAAL,CAAa,GAAb,CAAP,CAFA,CADD,CADH,CALF,CADF;AAmBD","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport api from '~/services/api';\n\nimport { Container, List } from './styles';\n\nconst range = [\n  8,9,10,11,12,13,14,15\n];\n\nexport default function Dashbord() {\n  const [ files, setFiles ] = useState([]);\n\n  useEffect(() => {\n    async function loadFiles() {\n      const response = await api.get('files');\n      console.tron.log(response.data);\n      setFiles(response.data);\n    }\n\n    loadFiles();\n  }, []);\n  return (\n    <Container>\n      <header>\n        <button>Carregar Listas</button>\n      </header>\n\n      <ul>\n        {files.map(file => (\n          <List key={file.id}>\n          <strong>{file.name}</strong>\n          <span>{file.content[105] }</span>\n        </List>\n        ))}\n        \n      </ul>\n\n    </Container>\n        \n  );\n}\n"]},"metadata":{},"sourceType":"module"}